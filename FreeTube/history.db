{"videoId":"qlNqPE_X4ME","title":"Newton-Raphson method | Animated and explained | Algorithm for finding roots of a function","author":"MathAndPhysics","authorId":"UCvOPaVkZjvJoNawmowRCBww","published":1590858885000,"description":"The Newton-Raphson method or Newton-Raphson algorithm is a way to numerically determine the roots of some function. It relies on an initial guess where a root of the function might be and then gives an iterative process to find the root. Choosing different starting points one can find all the roots of the function. The algorithm works for real and complex functions.\nThe animation in the first half of the video was created using the manim mathematical animation library by 3Blue1Brown: https://github.com/3b1b/manim\nThe zoom into the Newton fractal was made using fortran and animated in gnuplot.\n\nThe font used in the video is called Inconsolata by Raph Levien. It&apos;s a beautiful monospaced font and if you do any programming at all and are looking for a different font style for your editor you might want to check out his website: https://levien.com/type/myfonts/inconsolata.html","viewCount":36108,"lengthSeconds":441,"watchProgress":379.494657,"timeWatched":1704285174783,"isLive":false,"type":"video","_id":"BfK2d5jJZl3kYz1m"}
{"videoId":"YpwLArBofkk","title":"Friction Physics - Let's Make a Physics Engine [24]","author":"Two-Bit Coding","authorId":"UCsCBEU7sWvEMlTzP3jE0olg","published":1668631916000,"description":"We will discuss the mathematics and write the code to add friction impulses to our physics objects.\n\nSource Code:\nFlat Physics: https://github.com/twobitcoder101/FlatPhysics-part-24\nFlat: https://github.com/twobitcoder101/Flat\n\nTime Codes:\n0:00 - Intro\n0:23 - Friction Constants\n3:56 - Friction Impulses\n16:40 - Coulomb&apos;s Law\n23:00 - Testing and Conclusion","viewCount":7944,"lengthSeconds":1597,"watchProgress":10.565173,"timeWatched":1704267612801,"isLive":false,"type":"video","_id":"GOFMWdf0LwWy1PgY","lastViewedPlaylistId":"PLSlpr6o9vURwq3oxVZSimY8iC-cdd3kIs"}
{"videoId":"W7S94pq5Xuo","title":"Visually Explained: Newton's Method in Optimization","author":"Visually Explained","authorId":"UCoTo2gtN527CXhe7jbP6hUg","published":1611094624000,"description":"We take a look at Newton&apos;s method,  a powerful technique in Optimization. We explain the intuition behind it, and we list some of its pros and cons. No necessary background required beyond basic linear algebra and calculus. \n\n\n00:00 Introduction\n00:14 Unconstrained Optimization\n01:18 Iterative Optimization\n3:41 Numerical Example\n6:00 Derivation of Newton&apos;s Method\n7:48 Newton&apos;s Method for Solving Equations\n8:33 The Good\n9:31 The Bad\n10:35 The Ugly","viewCount":75218,"lengthSeconds":686,"watchProgress":679.676433,"timeWatched":1704285703465,"isLive":false,"type":"video","_id":"GQQQ0j4zQUT5rWMB"}
{"videoId":"d8dlz5LWq3E","title":"I‚Äôm Keeping the World‚Äôs Biggest TV.","author":"Linus Tech Tips","authorId":"UCXuqSBlHAE6Xw-yeJA0Tunw","published":1704041698000,"description":"Thanks to MANSCAPED for sponsoring today&apos;s video. Get 20% Off + Free International Shipping with promo code TECHTIPS or visit http://manscaped.com/techtips\n\nCheck out MotionGrey‚Äôs ergonomic workplace solutions at https://lmg.gg/motiongrey and use code LINUS for 10% off!\n\nI bought the TCL X11G Max, the biggest single-piece TV on the market at 115‚Äù. Actually, it‚Äôs not really on the market as it‚Äôs China-only but I somehow got it here and three people mounted it on my wall. But now that it‚Äôs set up, is it any good? Does it REALLY have over 20,000 local dimming zones? Are giant TVs going to destroy the market for projectors??\n\nBuy an Alienware AW3423DW 34&quot; 175Hz QD-OLED Curved Monitor: https://geni.us/uI3BPnL\n\nPurchases made through some store links may provide some compensation to Linus Media Group.\n\nDiscuss on the forum: https://linustechtips.com/topic/1550175-i%E2%80%99m-keeping-the-world%E2%80%99s-biggest-tv/\n\n‚ñ∫ GET MERCH: https://lttstore.com/?utm_medium=product_shelf&utm_source=youtube&utm_content=YT-APM2gMAlvpqDJORaBG4zOseGucdtMl23MOPvFcRABOTEac1y6SAme-ztl4rORUlTP8y83uIfpD83xwErfzoZm5VBV3Mw-46SobWyGVS601UA2IbVC1VBVavf9u2Pq6mp8mUiM7WkZdre6epXlGvylsWn_AJi1csKcru5ljLs_tZgABwAJ6AOgPc%3D\n‚ñ∫ GET EXCLUSIVE CONTENT ON FLOATPLANE: https://lmg.gg/lttfloatplane\n‚ñ∫ SPONSORS, AFFILIATES, AND PARTNERS: https://lmg.gg/partners\n‚ñ∫ EQUIPMENT WE USE TO FILM LTT: https://lmg.gg/LTTEquipment\n‚ñ∫ OUR WAN PODCAST GEAR: https://lmg.gg/wanset\n\nFOLLOW US \n---------------------------------------------------  \nTwitter: https://twitter.com/linustech\nFacebook: http://www.facebook.com/LinusTech\nInstagram: https://www.instagram.com/linustech\nTikTok: https://www.tiktok.com/@linustech\nTwitch: https://www.twitch.tv/linustech\n\nMUSIC CREDIT\n---------------------------------------------------\nIntro: Laszlo - Supernova\nVideo Link: https://www.youtube.com/watch?v=PKfxmFU3lWY&t=0s\niTunes Download Link: https://itunes.apple.com/us/album/supernova/id936805712\nArtist Link: https://soundcloud.com/laszlomusic\n\nOutro: Approaching Nirvana - Sugar High\nVideo Link: https://www.youtube.com/watch?v=ngsGBSCDwcI&t=0s\nListen on Spotify: http://spoti.fi/UxWkUw\nArtist Link: http://www.youtube.com/approachingnirvana\n\nIntro animation by MBarek Abdelwassaa https://www.instagram.com/mbarek_abdel/\nMonitor And Keyboard by vadimmihalkevich / CC BY 4.0  https://geni.us/PgGWp\nMechanical RGB Keyboard by BigBrotherECE / CC BY 4.0 https://geni.us/mj6pHk4\nMouse Gamer free Model By Oscar Creativo / CC BY 4.0 https://geni.us/Ps3XfE\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n1:13 hear me out\n3:30 20K dimming zones?\n5:45 SDR is nuts on this thing\n7:30 Color performance\n8:15 drawbacks of this TV\n9:00 the remote\n9:20 GAMING\n10:30 More drawbacks\n13:30 I HAVE A DEAD PIXEL\n14:55 Price..is it a bad deal?\n18:45 Outro","viewCount":1368678,"lengthSeconds":1144,"watchProgress":291.342242,"timeWatched":1704134429309,"isLive":false,"type":"video","_id":"GcIQqRNbJPHGbgvM"}
{"videoId":"kdgq-OwsOs8","title":"why does this array access work? (arrays in C are WEIRD)","author":"Low Level Learning","authorId":"UC6biysICWOJ-C3P4Tyeggzg","published":1704393443000,"description":"We&apos;ve all heard of arrays in C. We use them to store information using variables that are the same size contiguously in memory. But... why do arrays start at zero?\n\nüè´ COURSES üè´ Learn to code in C at https://lowlevel.academy/\nüì∞ NEWSLETTER üì∞  Sign up for our newsletter at https://mailchi.mp/lowlevel/the-low-down\n\nüôå SUPPORT THE CHANNEL üôå Become a Low Level Associate and support the channel at https://youtube.com/c/LowLevelLearning/join\n\nWhy Do Header Files Exist? https://www.youtube.com/watch?v=tOQZlD-0Scc&t=0s\nHow Does Return Work?  https://www.youtube.com/watch?v=e46wHUjNDjE&t=0s\n\nüî•üî•üî• SOCIALS üî•üî•üî•\nLow Level Merch!: https://lowlevel.store/\nFollow me on Twitter: https://twitter.com/lowleveltweets\nFollow me on Twitch: https://twitch.tv/lowlevellearning\nJoin me on Discord!: https://discord.gg/gZhRXDdBYY","viewCount":38690,"lengthSeconds":416,"watchProgress":1.087402,"timeWatched":1704560203041,"isLive":false,"type":"video","_id":"I0soz4w7hstrE3nd"}
{"videoId":"TtgS-b191V0","title":"Building a Physics Engine with C++ and Simulating Machines","author":"AngeTheGreat","authorId":"UCV0t1y4h_6-2SqEpXBXgwFQ","published":1643634010000,"description":"I talk about the basics of physics engine design and the theory behind rigid body constraint solvers. Here are all the resources you&apos;ll need to build a physics engine that is similar to the one I show in the video:\n\nSource code of my physics engine:\nhttps://github.com/ange-yaghi/simple-2d-constraint-solver\n\nEuler method for solving differential equations:\nhttps://en.wikipedia.org/wiki/Euler_method\n\nRunge-Kutta method for solving differential equations:\nhttps://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods#The_Runge%E2%80%93Kutta_method\n\nPhysically Based Modeling: Principles and Practice\nhttp://www.cs.cmu.edu/~baraff/sigcourse/notesf.pdf\n\nSource code of my real-time video encoder:\nhttps://github.com/ange-yaghi/direct-to-video\n\nSource code of my game engine:\nhttps://github.com/ange-yaghi/delta-studio\n\n<a href=\"https://www.youtube.com/hashtag/physics\">#physics</a> <a href=\"https://www.youtube.com/hashtag/simulation\">#simulation</a> <a href=\"https://www.youtube.com/hashtag/programming\">#programming</a>\n\nCheck out my GitHub profile!\nhttps://github.com/ange-yaghi\n\nJoin my Discord!\nhttps://discord.gg/R2baT4t5U7\n\nFollow me on Instagram!\nhttps://www.instagram.com/ange.the.great/\n\nIf you like my work and would like to support me, consider donating!\nhttps://ko-fi.com/angethegreat\n\nThanks for watching!","viewCount":626994,"lengthSeconds":682,"watchProgress":169.433587,"timeWatched":1704268851604,"isLive":false,"type":"video","_id":"XKhCJlt8Ozdty36f"}
{"videoId":"o0ck5eqpOLc","title":"The Au C++ Units Library: Handling Physical Units Safely, Quickly, & Broadly - Chip Hogg - CppCon 23","author":"CppCon","authorId":"UCMlGfpWw-RUdWX_JbLCukXg","published":1704036552000,"description":"https://cppcon.org/\n---\n\nThe Au C++ Units Library: Handling Physical Units Safely, Quickly, and Broadly - Chip Hogg - CppCon 2023\nhttps://github.com/CppCon/CppCon2023\n\nWe present Au: a new open-source C++ units library, by Aurora.  If you&apos;ve rejected other units libraries because they couldn&apos;t meet your needs, check out Au (pronounced, &quot;ay yoo&quot;).  It combines cutting-edge developer experience (fast compilation, simple and readable compiler errors) with wide accessibility (C++14 compatibility, single-header delivery option).  You can be up and running with Au in your project -- in any build system -- in less time than it takes to read this abstract!\n\nWe&apos;ll orient the viewer by providing a decision framework for choosing a units library, and using this framework to compare several leading options. We&apos;ll also see how these libraries influence each other. For example, Au has several compelling features inspired by other libraries, such as the concise and readable compiler errors of mp-units, and the frictionless single-header delivery of the nholthaus library --- in fact, Au is the first library to provide both these features at once. Au has also provided many new features of its own, including: fully unit-safe APIs; an adaptive &quot;overflow safety surface&quot; that governs unit conversions; on-the-fly composition for units and prefixes; smart, unit-aware rounding and inverse functions; and more.\n\nFinally, Au has a notably low barrier to migration --- in either direction.  We&apos;ll explain how to set up a correspondence between Au and any other units library.  Even though neither library knows about the other, you&apos;ll be able to pass Au-typed variables to APIs which take the other library&apos;s types, and vice versa.  This doesn&apos;t just make it easy to switch to Au; it promises a smooth upgrade path to any better library which comes along later (such as a future C++ standard units library).  With such a low barrier to entry, give Au a try, and find out what it feels like to get effortlessly correct handling for all your physical quantities!\n---\n\nChip Hogg\n\nChip Hogg is a Staff Software Engineer on the Motion Planning Team at Aurora Innovation, the self-driving vehicle company that is developing the Aurora Driver. After obtaining his PhD in Physics from Carnegie Mellon in 2010, he was a postdoctoral researcher and then staff scientist at the National Institute of Standards and Technology (NIST), doing Bayesian data analysis. He joined Google in 2012 as a software engineer, leaving in 2016 to work on autonomous vehicles at Uber&apos;s Advanced Technologies Group, where he stayed until their acquisition by Aurora in 2021.\n\nChip&apos;s main role at Aurora is to design libraries that make it as easy as possible to write integration tests for Aurora&apos;s motion planner. He is also the lead author and maintainer of Aurora&apos;s units library, Au, and led its open-source release in 2023.\n---\n\nVideos Filmed &amp; Edited by Bash Films: http://www.BashFilms.com/\nYouTube Channel Managed by Digital Medium Ltd: https://events.digital-medium.co.uk/\n---\n\nRegistration for CppCon: https://cppcon.org/registration/\n\n<a href=\"https://www.youtube.com/hashtag/cppcon\">#cppcon</a> <a href=\"https://www.youtube.com/hashtag/cppprogramming\">#cppprogramming</a> <a href=\"https://www.youtube.com/hashtag/cpp\">#cpp</a>","viewCount":4030,"lengthSeconds":3850,"watchProgress":6.525554,"timeWatched":1704134326293,"isLive":false,"type":"video","_id":"XSbBEy75XysA64k1"}
{"videoId":"lzI7QUyl66g","title":"Intro and Vectors for Physics Programming - Let's Make a Physics Engine [00]","author":"Two-Bit Coding","authorId":"UCsCBEU7sWvEMlTzP3jE0olg","published":1624745568000,"description":"Introduction to making a physics engine from scratch with no libraries. We create an optimized 2D vector container that will be the basis for most math operations.\n\nSource code (github):\nFlat:  https://github.com/twobitcoder101/Flat\nFlatPhysics:  https://github.com/twobitcoder101/FlatPhysics","viewCount":34169,"lengthSeconds":1384,"watchProgress":152.335271,"timeWatched":1704267629537,"isLive":false,"type":"video","_id":"clHwSDkHVPuXtfsh","lastViewedPlaylistId":"PLSlpr6o9vURwq3oxVZSimY8iC-cdd3kIs"}
{"videoId":"iSIvixNgNq4","title":"#8 3D Physics Engine Tutorial: Basic Collision Detection","author":"thebennybox","authorId":"UCnlpv-hhcsAtEHKR2y2fW4Q","published":1408118406000,"description":"In this video, we add a basic form of collision detection to the physics engine.\n\nStarting Code: https://github.com/BennyQBD/3DEngineCpp/tree/099150ec2a552bf7c4344ad0a00c771ef89e8065\n\nFinished Code: https://github.com/BennyQBD/3DEngineCpp/tree/1de25dc7de5f04a0bb34f0a470439eb31ee406cd\n\nCode Changes: https://github.com/BennyQBD/3DEngineCpp/commit/1de25dc7de5f04a0bb34f0a470439eb31ee406cd","viewCount":19689,"lengthSeconds":514,"watchProgress":485.138622,"timeWatched":1704268595371,"isLive":false,"type":"video","_id":"dNOLr5QZwnhvTCbr","lastViewedPlaylistId":"PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0"}
{"videoId":"eJCA2fynzME","title":"Back to Basics: (Range) Algorithms in C++ - Klaus Iglberger - CppCon 2023","author":"CppCon","authorId":"UCMlGfpWw-RUdWX_JbLCukXg","published":1703777348000,"description":"https://cppcon.org/\n---\n\nBack to Basics: (Range) Algorithms in C++ - Klaus Iglberger - CppCon 2023 \nhttps://github.com/CppCon/CppCon2023\n\n‚ÄúThere was never any question that the [standard template] library represented a breakthrough in efficient and extensible design‚Äù (Scott Meyers, Effective STL, 2008)\n\nOriginally developed as part of the Standard Template Library (STL), algorithms have become a must-know tool for every C++ developer. They increase productivity, significantly reduce bugs, and improve maintainability. This talk explains why and how algorithms do this. Additionally, it demonstrates why they are an amazing example for good, extensible software design.\n---\n\nKlaus Iglberger\n\nKlaus Iglberger is a freelance C++ trainer and consultant. He has finished his PhD in Computer Science in 2010 and since then is focused on large-scale C++ software design. He shares his expertise in popular advanced C++ courses around the world (mainly in Germany, but also in the rest of the EU and the US). Additionally, he is the author of ‚ÄúC++ Software Design‚Äù, the initiator and lead designer of the Blaze C++ math library, one of the organizers of the Munich C++ user group, and the (co-)organizer of the Back-to-Basics and Software Design tracks at CppCon.\n---\n\nVideos Filmed &amp; Edited by Bash Films: http://www.BashFilms.com/\nYouTube Channel Managed by Digital Medium Ltd: https://events.digital-medium.co.uk/\n---\n\nRegistration for CppCon: https://cppcon.org/registration/\n\n<a href=\"https://www.youtube.com/hashtag/cppcon\">#cppcon</a> <a href=\"https://www.youtube.com/hashtag/cppprogramming\">#cppprogramming</a> <a href=\"https://www.youtube.com/hashtag/cpp\">#cpp</a>","viewCount":12091,"lengthSeconds":3595,"watchProgress":872.730949,"timeWatched":1704134375803,"isLive":false,"type":"video","_id":"fKhEgOOrGuLnaD8z"}
{"videoId":"T-n3D-JRSKA","title":"Linear Algebra Book for Self-Study with Solutions","author":"The Math Sorcerer","authorId":"UCr7lmzIk63PZnBw3bezl-Mg","published":1703866074000,"description":"My Courses: https://www.freemathvids.com/ || This is a linear algebra book which you can use for self study. It has answers to almost every single problem and you can find free lectures on youtube to help you with the book. It was written by Gilbert Strang.\nHere is the 4th edition: https://amzn.to/3LLor24\nHere is the 3rd edition: https://amzn.to/3Q3MknY\nUseful Math Supplies https://amzn.to/3Y5TGcv\nMy Recording Gear https://amzn.to/3BFvcxp\n(these are my affiliate links)\n\n**********Math, Physics, and Computer Science Books**********\nEpic Math Book List https://amzn.to/3F98vT1\nPre-algebra, Algebra, and Geometry https://amzn.to/3FdbwSn\nCollege Algebra, Precalculus, and Trigonometry https://amzn.to/3UKjvfb\nProbability and Statistics https://amzn.to/3FaaxCq\nDiscrete Mathematics https://amzn.to/3P6jPE4\nProof Writing https://amzn.to/3XXukxo\nCalculus https://amzn.to/3iEH3F3\nDifferential Equations Books https://amzn.to/3Fac5wi\nPartial Differential Equations Books https://amzn.to/3uyk1SV\nLinear Algebra https://amzn.to/3VHiN3G\nAbstract Algebra Books https://amzn.to/3FzLZEr\nReal Analysis/Advanced Calculus https://amzn.to/3VIO4Ua\nComplex Analysis https://amzn.to/3P6kbuo\nNumber Theory https://amzn.to/3UEm3vw\nGraph Theory https://amzn.to/3BfRd5m\nTopology https://amzn.to/3BiAGhe\nGraduate Level Books https://amzn.to/3uv1eIg\nComputer Science https://amzn.to/3Hh8kaU\nPhysics https://amzn.to/3BhPCMp\nThese are my affiliate links. As an Amazon Associate I earn from qualifying purchases.\n\n\nIf you enjoyed this video please consider liking, sharing, and subscribing.\n\nUdemy Courses Via My Website: https://mathsorcerer.com/ \n\nMy FaceBook Page: https://www.facebook.com/themathsorcerer\n\nMy Instagram: https://www.instagram.com/therealmathsorcerer/\n\nMy TikTok: https://www.tiktok.com/@therealmathsorcerer\n\n\nThere are several ways that you can help support my channel:)\n\nConsider becoming a member of the channel: https://www.youtube.com/channel/UCr7lmzIk63PZnBw3bezl-Mg/join\nMy GoFundMe Page: https://www.gofundme.com/f/support-math-education-for-the-world\nMy Patreon Page: https://www.patreon.com/themathsorcerer\nDonate via PayPal: https://paypal.com/donate/?cmd=_s-xclick&hosted_button_id=7XNKUGJUENSYU\n\n***********Udemy Courses(Please Use These Links If You Sign Up!)************\nAbstract Algebra Course\nhttps://www.udemy.com/course/abstract-algebra-group-theory-with-the-math-sorcerer/?referralCode=B04607DA7A7D0E29272A\n\nAdvanced Calculus Course\nhttps://www.udemy.com/course/advanced-calculusreal-analysis-with-the-math-sorcerer/?referralCode=0ABDD66D061D976EE232\n\nCalculus 1 Course\nhttps://www.udemy.com/course/calculus-1-with-the-math-sorcerer/?referralCode=E853B70ED36571CA9768\n\nCalculus 2 Course\nhttps://www.udemy.com/course/calculus-2-with-the-math-sorcerer/?referralCode=BAA5520B32FEA9827D54\n\nCalculus 3 Course\nhttps://www.udemy.com/course/calculus-3-with-the-math-sorcerer/?referralCode=296462D1897904C4BEB3\n\nCalculus 1 Lectures with Assignments and a Final Exam\nhttps://www.udemy.com/course/calculus-1-lectures-with-the-math-sorcerer/?referralCode=5D425153B63A8F506E30\n\nCalculus Integration Insanity\nhttps://www.udemy.com/course/calculus-integration-insanity-with-the-math-sorcerer/?referralCode=D533EEE31F90EDDAFF93\n\nDifferential Equations Course\nhttps://www.udemy.com/course/differential-equations-with-the-math-sorcerer/?referralCode=4F0D91B41F7DACF4EC28\n\nDifferential Equations Lectures Course (Includes Assignments + Final Exam)\nhttps://www.udemy.com/course/differential-equations-lectures-with-the-math-sorcerer/?referralCode=89E6CCC307A7A8627CD6\n\nCollege Algebra Course\nhttps://www.udemy.com/course/college-algebra-with-the-math-sorcerer/?referralCode=B2929EE97EF68DB9B69F\n\nHow to Write Proofs with Sets Course\nhttps://www.udemy.com/course/how-to-write-proofs-in-set-theory-with-the-math-sorcerer/?referralCode=D503A7E3FB6916CF2D27\n\nHow to Write Proofs with Functions Course\nhttps://www.udemy.com/course/how-to-write-proofs-with-functions-with-the-math-sorcerer/?referralCode=DBACD59AB7B16D4707CD\n\nTrigonometry 1 Course\nhttps://www.udemy.com/course/trigonometry-1-with-the-math-sorcerer/?referralCode=79E02DDFD4106A909AF5\n\nTrigonometry 2 Course\nhttps://www.udemy.com/course/trigonometry-2-with-the-math-sorcerer/?referralCode=7966E40F319B4FEF6535\n\nStatistics with StatCrunch Course\nhttps://www.udemy.com/course/statistics-with-statcrunch-by-the-math-sorcerer/?referralCode=69B27AF43D10924FF63B\n\nMath Graduate Programs, Applying, Advice, Motivation\nhttps://www.udemy.com/course/math-graduate-programs-applying-advice-motivation/?referralCode=70A1CED973D7910E9161\n\nDaily Devotionals for Motivation with The Math Sorcerer\nhttps://www.udemy.com/course/daily-math-devotionals-for-motivation-with-the-math-sorcerer/?referralCode=2653144E315A37A94B8C\n\nThank you:)","viewCount":33716,"lengthSeconds":510,"watchProgress":43.250979,"timeWatched":1704133535498,"isLive":false,"type":"video","_id":"g9JXPEnFmCH8cogh"}
{"videoId":"K3rfftRT0lc","title":"Calculus by Frank Ayres Jr.","author":"The Math Sorcerer","authorId":"UCr7lmzIk63PZnBw3bezl-Mg","published":1704556810000,"description":"My Courses: https://www.freemathvids.com/ || This is Calculus by Frank Ayres. You can use this to learn Calculus.\nHere it is https://amzn.to/45G2GYx\nUseful Math Supplies https://amzn.to/3Y5TGcv\nMy Recording Gear https://amzn.to/3BFvcxp\n(these are my affiliate links)\n\n**********Math, Physics, and Computer Science Books**********\nEpic Math Book List https://amzn.to/3F98vT1\nPre-algebra, Algebra, and Geometry https://amzn.to/3FdbwSn\nCollege Algebra, Precalculus, and Trigonometry https://amzn.to/3UKjvfb\nProbability and Statistics https://amzn.to/3FaaxCq\nDiscrete Mathematics https://amzn.to/3P6jPE4\nProof Writing https://amzn.to/3XXukxo\nCalculus https://amzn.to/3iEH3F3\nDifferential Equations Books https://amzn.to/3Fac5wi\nPartial Differential Equations Books https://amzn.to/3uyk1SV\nLinear Algebra https://amzn.to/3VHiN3G\nAbstract Algebra Books https://amzn.to/3FzLZEr\nReal Analysis/Advanced Calculus https://amzn.to/3VIO4Ua\nComplex Analysis https://amzn.to/3P6kbuo\nNumber Theory https://amzn.to/3UEm3vw\nGraph Theory https://amzn.to/3BfRd5m\nTopology https://amzn.to/3BiAGhe\nGraduate Level Books https://amzn.to/3uv1eIg\nComputer Science https://amzn.to/3Hh8kaU\nPhysics https://amzn.to/3BhPCMp\nThese are my affiliate links. As an Amazon Associate I earn from qualifying purchases.\n\n\nIf you enjoyed this video please consider liking, sharing, and subscribing.\n\nUdemy Courses Via My Website: https://mathsorcerer.com/ \n\nMy FaceBook Page: https://www.facebook.com/themathsorcerer\n\nMy Instagram: https://www.instagram.com/therealmathsorcerer/\n\nMy TikTok: https://www.tiktok.com/@therealmathsorcerer\n\n\nThere are several ways that you can help support my channel:)\n\nConsider becoming a member of the channel: https://www.youtube.com/channel/UCr7lmzIk63PZnBw3bezl-Mg/join\nMy GoFundMe Page: https://www.gofundme.com/f/support-math-education-for-the-world\nMy Patreon Page: https://www.patreon.com/themathsorcerer\nDonate via PayPal: https://paypal.com/donate/?cmd=_s-xclick&hosted_button_id=7XNKUGJUENSYU\n\n***********Udemy Courses(Please Use These Links If You Sign Up!)************\nAbstract Algebra Course\nhttps://www.udemy.com/course/abstract-algebra-group-theory-with-the-math-sorcerer/?referralCode=B04607DA7A7D0E29272A\n\nAdvanced Calculus Course\nhttps://www.udemy.com/course/advanced-calculusreal-analysis-with-the-math-sorcerer/?referralCode=0ABDD66D061D976EE232\n\nCalculus 1 Course\nhttps://www.udemy.com/course/calculus-1-with-the-math-sorcerer/?referralCode=E853B70ED36571CA9768\n\nCalculus 2 Course\nhttps://www.udemy.com/course/calculus-2-with-the-math-sorcerer/?referralCode=BAA5520B32FEA9827D54\n\nCalculus 3 Course\nhttps://www.udemy.com/course/calculus-3-with-the-math-sorcerer/?referralCode=296462D1897904C4BEB3\n\nCalculus 1 Lectures with Assignments and a Final Exam\nhttps://www.udemy.com/course/calculus-1-lectures-with-the-math-sorcerer/?referralCode=5D425153B63A8F506E30\n\nCalculus Integration Insanity\nhttps://www.udemy.com/course/calculus-integration-insanity-with-the-math-sorcerer/?referralCode=D533EEE31F90EDDAFF93\n\nDifferential Equations Course\nhttps://www.udemy.com/course/differential-equations-with-the-math-sorcerer/?referralCode=4F0D91B41F7DACF4EC28\n\nDifferential Equations Lectures Course (Includes Assignments + Final Exam)\nhttps://www.udemy.com/course/differential-equations-lectures-with-the-math-sorcerer/?referralCode=89E6CCC307A7A8627CD6\n\nCollege Algebra Course\nhttps://www.udemy.com/course/college-algebra-with-the-math-sorcerer/?referralCode=B2929EE97EF68DB9B69F\n\nHow to Write Proofs with Sets Course\nhttps://www.udemy.com/course/how-to-write-proofs-in-set-theory-with-the-math-sorcerer/?referralCode=D503A7E3FB6916CF2D27\n\nHow to Write Proofs with Functions Course\nhttps://www.udemy.com/course/how-to-write-proofs-with-functions-with-the-math-sorcerer/?referralCode=DBACD59AB7B16D4707CD\n\nTrigonometry 1 Course\nhttps://www.udemy.com/course/trigonometry-1-with-the-math-sorcerer/?referralCode=79E02DDFD4106A909AF5\n\nTrigonometry 2 Course\nhttps://www.udemy.com/course/trigonometry-2-with-the-math-sorcerer/?referralCode=7966E40F319B4FEF6535\n\nStatistics with StatCrunch Course\nhttps://www.udemy.com/course/statistics-with-statcrunch-by-the-math-sorcerer/?referralCode=69B27AF43D10924FF63B\n\nMath Graduate Programs, Applying, Advice, Motivation\nhttps://www.udemy.com/course/math-graduate-programs-applying-advice-motivation/?referralCode=70A1CED973D7910E9161\n\nDaily Devotionals for Motivation with The Math Sorcerer\nhttps://www.udemy.com/course/daily-math-devotionals-for-motivation-with-the-math-sorcerer/?referralCode=2653144E315A37A94B8C\n\nThank you:)","viewCount":299,"lengthSeconds":239,"watchProgress":5.246503,"timeWatched":1704558822113,"isLive":false,"type":"video","_id":"jInTW76kw8I7AOpg"}
{"videoId":"c447uYCePAo","title":"CS001++ - Welcome to the CS++ Video Series","author":"C++ Weekly With Jason Turner","authorId":"UCxHAlbZQNFU2LgEtiqd2Maw","published":1704472199000,"description":"‚òü‚òü Awesome T-Shirts! Sponsors! Books! ‚òü‚òü\n\nhttps://github.com/lefticus/cpp_weekly/discussions/categories/cs101 for open ended conversions about CS101++ videos \n\nT-SHIRTS AVAILABLE!\n\n‚ñ∫ The best C++ T-Shirts anywhere! https://my-store-d16a2f.creator-spring.com/?utm_medium=product_shelf&utm_source=youtube&utm_content=YT-APM2gMCDa7e_lyeV6GtpfEcjYjs-WIV5P2BALIVFdLaybLCllKBxCrQvIjoiiYORFJsvcfy9jiYzlNr7tO-9twZ4u0eEiexsoJRi4qqwlfuhO582aJnCdQaFW-ui5U9i13EX6guwriaVzMcZ0UwSPtzbwH3DW4BlPjNYsLdLihxQJovKG11OTq__\n\n\nWANT MORE JASON?\n\n‚ñ∫ My Training Classes: http://emptycrate.com/training.html\n‚ñ∫ Follow me on twitter: https://twitter.com/lefticus\n\n\nSUPPORT THE CHANNEL\n\n‚ñ∫ Patreon: https://www.patreon.com/lefticus \n‚ñ∫ Github Sponsors: https://github.com/sponsors/lefticus\n‚ñ∫ Paypal Donation: https://www.paypal.com/donate/?hosted_button_id=PQ4A2V6ZZFQEU\n\n\nGET INVOLVED\n\n‚ñ∫ Video Idea List: https://github.com/lefticus/cpp_weekly/issues\n\n\nJASON&apos;S BOOKS\n\n‚ñ∫ C++ Best Practices\n  Amazon Paperback: https://amzn.to/3wpAU3Z\n  Leanpub Ebook: https://leanpub.com/cppbestpractices\n\n\nJASON&apos;S PUZZLE BOOKS\n\n‚ñ∫ Object Lifetime Puzzlers Book 1\n  Amazon Paperback: https://amzn.to/3g6Ervj\n  Leanpub Ebook: https://leanpub.com/objectlifetimepuzzlers_book1\n  \n‚ñ∫ Object Lifetime Puzzlers Book 2\n  Amazon Paperback: https://amzn.to/3whdUDU\n  Leanpub Ebook: https://leanpub.com/objectlifetimepuzzlers_book2\n  \n‚ñ∫ Object Lifetime Puzzlers Book 3\n  Leanpub Ebook: https://leanpub.com/objectlifetimepuzzlers_book3\n\n‚ñ∫ Copy and Reference Puzzlers Book 1\n  Amazon Paperback: https://amzn.to/3g7ZVb9\n  Leanpub Ebook: https://leanpub.com/copyandreferencepuzzlers_book1\n\n‚ñ∫ Copy and Reference Puzzlers Book 2\n  Amazon Paperback: https://amzn.to/3X1LOIx\n  Leanpub Ebook: https://leanpub.com/copyandreferencepuzzlers_book2\n  \n‚ñ∫ Copy and Reference Puzzlers Book 3\n  Leanpub Ebook: https://leanpub.com/copyandreferencepuzzlers_book3\n  \n‚ñ∫ OpCode Puzzlers Book 1\n  Amazon Paperback: https://amzn.to/3KCNJg6\n  Leanpub Ebook: https://leanpub.com/opcodepuzzlers_book1\n\n  \nRECOMMENDED BOOKS\n\n‚ñ∫ Bjarne Stroustrup&apos;s A Tour of C++ (now with C++20/23!): https://amzn.to/3X4Wypr\n\n\nAWESOME PROJECTS\n\n‚ñ∫ The C++ Starter Project - Gets you started with Best Practices Quickly - https://github.com/cpp-best-practices/cpp_starter_project\n‚ñ∫ C++ Best Practices Forkable Coding Standards - https://github.com/cpp-best-practices/cppbestpractices\n\n\nO&apos;Reilly VIDEOS\n\n‚ñ∫ Inheritance and Polymorphism in C++ - https://www.oreilly.com/library/view/inheritance-and-polymorphism/9781491961933/\n‚ñ∫ Learning C++ Best Practices - https://www.oreilly.com/library/view/learning-c-best/9781491954898/","viewCount":7949,"lengthSeconds":415,"watchProgress":96.135148,"timeWatched":1704551770707,"isLive":false,"type":"video","_id":"jtFmS9a6jO2e1PI6"}
{"videoId":"C0TTxV0n9OA","title":"What is Linear Programming (LP)? (in 2 minutes)","author":"Visually Explained","authorId":"UCoTo2gtN527CXhe7jbP6hUg","published":1636720206000,"description":"Overview of Linear Programming in 2 minutes.\n\n----------------------\nAdditional Information on the distinction between &quot;Polynomial&quot; vs &quot;Strongly Polynomial&quot; algorithms:\nAn algorithm for solving LPs of the form \nmax c^t x s.t. Ax \\le b\nruns in polynomial time if its running time can be bounded by a polynomial D^r, where &quot;r&quot; is some integer, and D is the bit-size of the data of the problem, or in other words, D is the amount of memory that it takes to store the matrix A and the vectors b and c. On the other hand, an algorithm runs in strongly polynomial time if its running time can be bounded by a polynomial n^r m^s, where &quot;r&quot; and &quot;s&quot; are integers, &quot;n&quot; is the number of variables and &quot;m&quot; is the number of constraints. \n\nThe distinction is subtle, but is an important one. Essentially, a polynomial time algorithm is allowed to take more time as the size of the coefficients of A grows (while keeping the dimensions of A constant), but a strongly polynomial time algorithm is not.\n\n(I glossed over some details here. For example in the definition of strong polynomial time algorithms, we assume that the basic arithmetic operations take a constant time no matter the size of the operands.)\n\nThe interior point method is a polynomial time algorithm, but not a strongly polynomial time one (e.g., https://arxiv.org/abs/1708.01544).\n\n----------------------\nTypos:\n- &quot;Schedueling&quot; should be &quot;Scheduling&quot;\n\n--------------\n\nTimestamps:\n- 0:00 Motivating Example\n- 0:39 Definition\n- 1:07 Applications\n- 1:42 Code\n- 2:00 Open Problems\n\n\n---------------\nCredit:\nüêç Manim and Python : https://github.com/3b1b/manim\nüêµ Blender3D: https://www.blender.org/\nüóíÔ∏è Emacs: https://www.gnu.org/software/emacs/\nMusic/Sound: www.bensound.com, Zapsplat.com\n\nThis video would not have been possible without the help of G√∂k√ße Dayanƒ±klƒ±.","viewCount":12442,"lengthSeconds":157,"watchProgress":148.767524,"timeWatched":1704286586849,"isLive":false,"type":"video","_id":"tT7SXHw59c32AMrm"}
{"videoId":"FegeRT5N3A4","title":"Why Brain-like Computers Are Hard","author":"Asianometry","authorId":"UC1LpsuAUaKoMzzJSEt5WImw","published":1703199616000,"description":"Links:\n- The Asianometry Newsletter: https://www.asianometry.com/\n- Patreon: https://www.patreon.com/Asianometry\n- Threads: https://www.threads.net/@asianometry\n- Twitter: https://twitter.com/asianometry","viewCount":112569,"lengthSeconds":1063,"watchProgress":5.120091,"timeWatched":1704034133988,"isLive":false,"type":"video","_id":"vBgORsIEHcXZLiCO"}
{"videoId":"dq06CKcoRjA","title":"#11 3D Physics Engine Tutorial: Proper Bouncing","author":"thebennybox","authorId":"UCnlpv-hhcsAtEHKR2y2fW4Q","published":1408723208000,"description":"In this video, we create a proper bounce collision response as part of generalizing collision response.\n\nStarting Code: https://github.com/BennyQBD/3DEngineCpp/tree/240f9d58988f8bad5c18243ce923a0688f8f2f37\n\nFinished Code: https://github.com/BennyQBD/3DEngineCpp/tree/7e0022e0d0e253f50ee14a00abcf095fa8fa667f\n\nCode Changes: https://github.com/BennyQBD/3DEngineCpp/commit/7e0022e0d0e253f50ee14a00abcf095fa8fa667f","viewCount":17424,"lengthSeconds":552,"watchProgress":459.034656,"timeWatched":1704268654198,"isLive":false,"type":"video","_id":"vk7Qf85E3PdnfA36","lastViewedPlaylistId":"PLEETnX-uPtBXm1KEr_2zQ6K_0hoGH6JJ0"}
{"videoId":"36u782fl0dM","title":"The All-Screen PC","author":"Linus Tech Tips","authorId":"UCXuqSBlHAE6Xw-yeJA0Tunw","published":1703792745000,"description":"Check out CableMods StealthSense cables at: Amazon:¬†https://www.amazon.com/stores/page/1321ADE8-222D-4BED-B258-C81EF5575B4F?ingress=0&visitId=9009124c-b707-4b3e-89ec-b728b2438d99\n\nCableMod:¬†https://store.cablemod.com/stealthsense-technology/\n\nHave you ever wanted less performance but a cooler looking computer? Well we have just the computer for you! It wasn&apos;t easy (it took a year) but we finally got the All-Screen PC up and running for you to enjoy and never build yourself!\n\nDiscuss on the forum: https://linustechtips.com/topic/1549598-the-all-screen-pc/\n\nLinks to Products!\n\nBuy a ASRock Z790 Steel Legend WiFi Motherboard: https://geni.us/GjveGYa\nBuy a ASRock 13.3&quot; Side Panel Display: https://lmg.gg/oJ3gu\nBuy a Intel Core i9-13900K CPU: https://geni.us/NrorZ\nBuy a Corsair Vengeance 5200MHz 2x16GB DDR5 RAM: https://geni.us/P1sQJF\nBuy a Crucial P3 Plus 500GB NVMe M.2 SSD: https://geni.us/65YNV\nBuy a HYTE Y70 Touch Mid-Tower ATX Case: https://lmg.gg/crdEO\nBuy a GIGABYTE Aorus P1200W 80+ Platinum PSU: https://geni.us/gnCq3\nBuy a Lian Li Uni Fan TL LCD Case Fans: https://lmg.gg/Nj1GS\nBuy a ASUS ROG Ryujin 2 360 AIO Cooler: https://lmg.gg/ip8Sy\nBuy a NZXT Internal USB Hub: https://lmg.gg/OR7xu\nBuy a Thermaltake Pacific R2 Ultra Memory LCD Monitor Kit: https://geni.us/u9XnO\nBuy a Colorful iGame Vulcan OC-V GeForce RTX 4090: https://lmg.gg/2htoI\nBuy a EKWB EK-Quantum Lumen 7&quot; LCD Screen: https://geni.us/p99FaI\nBuy a HXSJ J500 Wired Gaming Mouse: https://lmg.gg/ul7w4\nBuy a SteelSeries Apex Pro TKL Mechanical Keyboard: https://lmg.gg/1qd2y\nBuy a Elgato Stream Deck Mini: https://geni.us/mgIt\nBuy a Elgato Stream Deck XL: https://lmg.gg/KKwgY\nBuy a Elgato Stream Deck +: https://geni.us/MIm8b8\nBuy a Keebmonkey Display Bar: https://lmg.gg/V1JyD\n\nPurchases made through some store links may provide some compensation to Linus Media Group.\n\n‚ñ∫ GET MERCH: https://lttstore.com/?utm_medium=product_shelf&utm_source=youtube&utm_content=YT-APM2gMCdkyE213A3nJcsexdNQ5ZrOq-WeF7YWnkubIe_j7UlXa5ubPUAn127HWdSwaZXV6xb6zi2NoQbnvkScWX2ZIkldhyAP0Soq7Xoz0AWAkRFgCyg59SUaTmy-F9jlWcYiV6JVkw0X05erLYNW1ZmPjJkK9_ez1-PPni9Np_n5v5Rr8OGHo31\n‚ñ∫ GET EXCLUSIVE CONTENT ON FLOATPLANE: https://lmg.gg/lttfloatplane\n‚ñ∫ SPONSORS, AFFILIATES, AND PARTNERS: https://lmg.gg/partners\n‚ñ∫ EQUIPMENT WE USE TO FILM LTT: https://lmg.gg/LTTEquipment\n‚ñ∫ OUR WAN PODCAST GEAR: https://lmg.gg/wanset\n\nFOLLOW US \n--------------------------------------------------- ¬†\nTwitter: https://twitter.com/linustech\nFacebook: http://www.facebook.com/LinusTech\nInstagram: https://www.instagram.com/linustech\nTikTok: https://www.tiktok.com/@linustech\nTwitch: https://www.twitch.tv/linustech\n\nMUSIC CREDIT\n---------------------------------------------------\nIntro: Laszlo - Supernova\nVideo Link: https://www.youtube.com/watch?v=PKfxmFU3lWY&t=0s\niTunes Download Link: https://itunes.apple.com/us/album/supernova/id936805712\nArtist Link: https://soundcloud.com/laszlomusic\n\nOutro: Approaching Nirvana - Sugar High\nVideo Link: https://www.youtube.com/watch?v=ngsGBSCDwcI&t=0s\nListen on Spotify: http://spoti.fi/UxWkUw\nArtist Link: http://www.youtube.com/approachingnirvana\n\nIntro animation by MBarek Abdelwassaa https://www.instagram.com/mbarek_abdel/\nMonitor And Keyboard by vadimmihalkevich / CC BY 4.0 ¬†https://geni.us/PgGWp\nMechanical RGB Keyboard by BigBrotherECE / CC BY 4.0 https://geni.us/mj6pHk4\nMouse Gamer free Model By Oscar Creativo / CC BY 4.0 https://geni.us/Ps3XfE\n\nCHAPTERS\n---------------------------------------------------\n0:00 Intro\n1:26 Starting the Build\n5:05 First Problem Already\n6:05 More parts with more screens\n7:16 Assembling the Radiator\n7:52 Disappointed Linus\n8:14 Continue Build\n8:56 Running out of USB Headers\n10:22 Ram Screen\n11:06 Way too many Cables\n11:33 Linus torments Elijah\n12:13 CPU Cooler Screen\n12:28 GPU Install\n13:52 More Internal Displays\n14:53 Jank Assembly\n15:41 Case Screen\n15:55 Mounting the EK Screens\n17:04 EDP Screen\n18:17 Finished Build\n20:06 Trying to Close the Side Panel\n21:10 Peripherals with Screens\n27:10 Gaming\n29:39 Outro","viewCount":1297949,"lengthSeconds":1791,"watchProgress":38.4269,"timeWatched":1704035217045,"isLive":false,"type":"video","_id":"xPUNLs9t1iPYZPdQ"}
